/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clock;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static javax.management.timer.Timer.ONE_SECOND;
import javax.swing.Timer;

/**
 *
 * @author Henrik & Jakob
 */
public class GUI extends javax.swing.JFrame 
{
    
    public final static int timerSpeed = 500; // milliseconds
    int clockMode = 0; //  modes (0 Normal /1 Set time /2 Set alarm /3 Count down /4 Count up )
    int setTime = 0; // 0-3
    int foregroundColorBlink = 0;
    boolean setTimeFlag = false;
    Timer timer;
    Clock clockLogic;
    
    /**
     * Creates new form GUI
     */
    public GUI() 
    {
        
        clockLogic = new Clock();
        initComponents();
        updateFields();
        
        timer = new Timer(timerSpeed, new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent evt) 
        {      
            updateFields();
        }    
    });
      
        
        timer.start();
    }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        modeButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        upButton = new javax.swing.JButton();
        yearField = new javax.swing.JTextField();
        monthField = new javax.swing.JTextField();
        dayField = new javax.swing.JTextField();
        hourField = new javax.swing.JTextField();
        minuteField = new javax.swing.JTextField();
        secondField = new javax.swing.JTextField();
        messageField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        modeButton.setText("MODE");
        modeButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modeButtonActionPerformed(evt);
            }
        });

        downButton.setText("DOWN");
        downButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                downButtonActionPerformed(evt);
            }
        });

        upButton.setText("UP");
        upButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                upButtonActionPerformed(evt);
            }
        });

        yearField.setEditable(false);
        yearField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        yearField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yearField.setText("Year");
        yearField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        yearField.setFocusable(false);
        yearField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                yearFieldActionPerformed(evt);
            }
        });

        monthField.setEditable(false);
        monthField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        monthField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        monthField.setText("Month");
        monthField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        monthField.setFocusable(false);

        dayField.setEditable(false);
        dayField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        dayField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayField.setText("Day");
        dayField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        dayField.setFocusable(false);
        dayField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                dayFieldActionPerformed(evt);
            }
        });

        hourField.setEditable(false);
        hourField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        hourField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hourField.setText("Hour");
        hourField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        hourField.setFocusable(false);

        minuteField.setEditable(false);
        minuteField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        minuteField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        minuteField.setText("Minute");
        minuteField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        minuteField.setFocusable(false);

        secondField.setEditable(false);
        secondField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        secondField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        secondField.setText("Second");
        secondField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        secondField.setFocusable(false);

        messageField.setEditable(false);
        messageField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        messageField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        messageField.setText("Message");
        messageField.setFocusable(false);
        messageField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                messageFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel2.setText("CBA CLOCK");

        jLabel1.setText("Year");

        jLabel3.setText("Month");

        jLabel4.setText("Day");

        jLabel5.setText("Second");

        jLabel6.setText("Minute");

        jLabel7.setText("Hour");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(modeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(downButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(upButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hourField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(minuteField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel6)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createSequentialGroup()
                    .addGap(143, 143, 143)
                    .addComponent(jLabel2)
                    .addGap(55, 55, 55)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel4)
                .addGap(105, 105, 105)
                .addComponent(jLabel3)
                .addGap(83, 83, 83)
                .addComponent(jLabel1)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minuteField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(secondField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(hourField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(downButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeButtonActionPerformed
        
        if( !setTimeFlag )
        {
            clockMode += 1;
        
            if( clockMode > 4 )
                    clockMode = 0;
        }
        
        if( setTimeFlag )
        {
            
            setTime += 1;
            
            if( setTime != 0 )
            {
                secondField.setForeground( hourField.getForeground() );
            }
            else if ( setTime != 1 )
            {
                minuteField.setForeground( hourField.getForeground() );
            }
            
            else if ( setTime != 2 )
            {
                hourField.setForeground( secondField.getForeground() );
            }
            
            
            if( setTime > 2 )
            {
                setTime = 0;
                setTimeFlag = false;
            }
                    
                    
            
        }
        
        updateFields();
         
    }//GEN-LAST:event_modeButtonActionPerformed

    private void messageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageFieldActionPerformed

    private void dayFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayFieldActionPerformed

    private void yearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearFieldActionPerformed
    
    }//GEN-LAST:event_yearFieldActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_upButtonActionPerformed
    {//GEN-HEADEREND:event_upButtonActionPerformed
       if( clockMode == 1 )
       {
            setTimeFlag = true;
          
            if( setTime == 0 )
            {
              clockLogic.editSeconds(1);
            }
            else if( setTime == 1 )
            {
              clockLogic.editMinutes(1);
            }
            else if( setTime == 2 )
            {
              clockLogic.editHour(1);         
            }
          
            updateFields();
 
        }

    }//GEN-LAST:event_upButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_downButtonActionPerformed
    {//GEN-HEADEREND:event_downButtonActionPerformed
        if( clockMode == 1 )
        {
            setTimeFlag = true;

            if( setTime == 0 )
            {
              clockLogic.editSeconds(-1);
            }
            else if( setTime == 1 )
            {
              clockLogic.editMinutes(-1);
            }
            else if( setTime == 2 )
            {
              clockLogic.editHour(-1);         
            }

            updateFields();

        }
    }//GEN-LAST:event_downButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

      
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
          
            }
            
            
        });
        
        
        
        
       
    }

    public void updateFields()
        {
            clockLogic.updateClock();        
            yearField.setText( "" + clockLogic.getYear() );
            monthField.setText( "" + clockLogic.getMonth() );
            dayField.setText( "" + clockLogic.getDays() );
            hourField.setText( "" + clockLogic.getHour()%24 );
            minuteField.setText( "" + clockLogic.getMinute()%60 );
            secondField.setText( "" + clockLogic.getSecond()%60 );     
            
            if( clockMode == 0 )
                messageField.setText("Normal");
            else if( clockMode == 1 )
                messageField.setText("Set time");
            else if( clockMode == 2 )
                messageField.setText("Set alarm");
            else if( clockMode == 3 )
                messageField.setText("Count down");
            else if( clockMode == 4 )
                messageField.setText("Count up");
            
            if( setTimeFlag )
            {
                
                if( setTime == 0 )
                {
                  
                    if( foregroundColorBlink == 1 )
                    {
                       secondField.setForeground(Color.GREEN);
                       foregroundColorBlink = 0;

                    }
                    else if( foregroundColorBlink == 0 )
                    {
                       secondField.setForeground(minuteField.getForeground());
                       foregroundColorBlink = 1;
                    }
                     
                }
                else if( setTime == 1 )
                {
                  
                    if( foregroundColorBlink == 1 )
                    {
                       minuteField.setForeground(Color.GREEN);
                       foregroundColorBlink = 0;

                    }
                    else if( foregroundColorBlink == 0 )
                    {
                       minuteField.setForeground(hourField.getForeground());
                       foregroundColorBlink = 1;
                    }
                    
                }
                else if( setTime == 2 )
                {
                     
                    if( foregroundColorBlink == 1 )
                    {
                       hourField.setForeground(Color.GREEN);
                       foregroundColorBlink = 0;

                    }
                    else if( foregroundColorBlink == 0 )
                    {
                       hourField.setForeground(secondField.getForeground());
                       foregroundColorBlink = 1;
                    }
                    
                }
                
            }
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dayField;
    private javax.swing.JButton downButton;
    private javax.swing.JTextField hourField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField messageField;
    private javax.swing.JTextField minuteField;
    private javax.swing.JButton modeButton;
    private javax.swing.JTextField monthField;
    private javax.swing.JTextField secondField;
    private javax.swing.JButton upButton;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables




}

    
    

